// <auto-generated />
using System;
using BN.PROJECT.AlpacaService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BN.PROJECT.AlpacaService.Migrations
{
    [DbContext(typeof(AlpacaDbContext))]
    [Migration("20250131114827_AlpacaExecutionModelChange")]
    partial class AlpacaExecutionModelChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BN.PROJECT.AlpacaService.AlpacaAsset", b =>
                {
                    b.Property<Guid>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("MarketCloseTime")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AssetId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("BN.PROJECT.AlpacaService.AlpacaBar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("C")
                        .HasColumnType("numeric");

                    b.Property<decimal>("H")
                        .HasColumnType("numeric");

                    b.Property<decimal>("L")
                        .HasColumnType("numeric");

                    b.Property<decimal>("N")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("O")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("T")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("V")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Vw")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("BN.PROJECT.AlpacaService.AlpacaExecutionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Assets")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("StrategyId")
                        .HasColumnType("uuid");

                    b.Property<int>("StrategyType")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Executions");
                });

            modelBuilder.Entity("BN.PROJECT.AlpacaService.AlpacaOrder", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AverageFillPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CancelledAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClientOrderId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ExpiredAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FailedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FilledAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("FilledQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HighWaterMark")
                        .HasColumnType("numeric");

                    b.Property<long>("IntegerFilledQuantity")
                        .HasColumnType("bigint");

                    b.Property<long>("IntegerQuantity")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("LimitPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Notional")
                        .HasColumnType("numeric");

                    b.Property<int>("OrderClass")
                        .HasColumnType("integer");

                    b.Property<int>("OrderSide")
                        .HasColumnType("integer");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("ReplacedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ReplacedByOrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReplacesOrderId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("StopPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("SubmittedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TimeInForce")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TrailOffsetInDollars")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TrailOffsetInPercent")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BN.PROJECT.AlpacaService.AlpacaPosition", b =>
                {
                    b.Property<Guid>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AssetChangePercent")
                        .HasColumnType("numeric");

                    b.Property<int>("AssetClass")
                        .HasColumnType("integer");

                    b.Property<decimal?>("AssetCurrentPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AssetLastPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvailableQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AverageEntryPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CostBasis")
                        .HasColumnType("numeric");

                    b.Property<int>("Exchange")
                        .HasColumnType("integer");

                    b.Property<long>("IntegerAvailableQuantity")
                        .HasColumnType("bigint");

                    b.Property<long>("IntegerQuantity")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("IntradayUnrealizedProfitLoss")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IntradayUnrealizedProfitLossPercent")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MarketValue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int>("Side")
                        .HasColumnType("integer");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("UnrealizedProfitLoss")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("UnrealizedProfitLossPercent")
                        .HasColumnType("numeric");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("AssetId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("BN.PROJECT.AlpacaService.AlpacaQuote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AskExchange")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("AskPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AskSize")
                        .HasColumnType("numeric");

                    b.Property<string>("BidExchange")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("BidPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("BidSize")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tape")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("BN.PROJECT.AlpacaService.UserSettings", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("AlpacaKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AlpacaSecret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("UserSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
