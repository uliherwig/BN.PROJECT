// <auto-generated />
using System;
using BN.PROJECT.StrategyService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BN.PROJECT.StrategyService.Migrations
{
    [DbContext(typeof(StrategyDbContext))]
    [Migration("20241030120844_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BN.PROJECT.Core.BacktestSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOvernight")
                        .HasColumnType("boolean");

                    b.Property<bool>("Bookmarked")
                        .HasColumnType("boolean");

                    b.Property<int>("BreakoutPeriod")
                        .HasColumnType("integer");

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("StopLossPercent")
                        .HasColumnType("numeric");

                    b.Property<int>("StopLossStrategy")
                        .HasColumnType("integer");

                    b.Property<int>("Strategy")
                        .HasColumnType("integer");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TakeProfitPercent")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("TestStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TrailingStop")
                        .HasColumnType("numeric");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Strategies");
                });

            modelBuilder.Entity("BN.PROJECT.Core.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CloseSignal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrevHigh")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PrevHighStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("PrevLow")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PrevLowStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("PriceClose")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PriceOpen")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProfitLoss")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Side")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StampClosed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StampOpened")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("StopLoss")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TakeProfit")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TestId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
